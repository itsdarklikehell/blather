#===============================================
#      ____  _       _   _
#     | __ )| | __ _| |_| |__   ___ _ __
#     |  _ \| |/ _` | __| '_ \ / _ \ '__|
#     | |_) | | (_| | |_| | | |  __/ |
#     |____/|_|\__,_|\__|_| |_|\___|_|
#
#       __               _
#      / /_  __  __     (_)__  ____  _________ _
#     / __ \/ / / /    / / _ \/_  / / ___/ __ `/
#    / /_/ / /_/ /    / /  __/ / /_/ /  / /_/ /
#   /_.___/\__, /  __/ /\___/ /___/_/   \__,_/
#         /____/  /___/
#
#   commands are KEY:value pairs
#
#   WHAT YOU SAY: command to run
#===============================================
#
# for some of my commands to work you must set
# environment variables in your blather startup
# script. For example here are the environment
# variables that I set in mine:
#
#   export GST_PLUGIN_PATH=/usr/local/lib/gstreamer-0.10
#   export VOICE="/usr/bin/espeak"
#   export PLUGINS="/home/rizzo/blather/config/plugins"
#   export CONFIGDIR="/home/$(whoami)/blather/config"
#   export CLIP="/home/$(whoami)/.local/share/clipit/history"
#   #export KEYPRESS="xvkbd -xsendevent -secure -text"
#   export KEYPRESS="xdotool key"
#   export KEYHOLD="xdotool keydown"
#   export KEYREL="xdotool keyup"
#   export KEYTYPE="xdotool type"
#   export MMOVE="xdotool mousemove"
#   export CLICK="xdotool click"
#   export BROWSER="firefox"
#   export CHBROWSER="google-chrome"
#   export EDITOR="atom"
#
#   export FM="thunar"
#
# I also store lots of data for text input in text
# files and have a special directory of blather scripts.
# If certain series of commands get too complicated then
# I will just put them in a script and call the script
# from the blather command.
#
# $KEYPRESSs: alt, Tab, Control, Super_L, Up, Down,
#               BackSpace, Page_Up, Page_Down, Left,
#               Right, space, Escape, Home, End, F1, F2 (etc)
#               period, comma, dollar, equal,
#               XF86AudioPlay, XF86AudioPrev, XF86AudioNext
#               XF86AudioLowerVolume, XF86AudioRaiseVolume
#               XF86AudioMute
# $CLICKs: Generally, left = 1, middle = 2, right = 3, wheel up = 4, wheel down = 5
# $MMOVEs: XCOORD:YCOORD
#
# You will notice that I use both xdotool and xvkbd for keystroke
# commands. In general I prefer xdotool for short key combinations
# and single key presses, while I use xvkbd for strings of characters
# and for typing the contents of text files.
#===============================================================
# HAL:keyword

# ------- Blather Maintenance -------- #
KILL BLADDER: $HOME/blather/config/plugins/stoplistening.sh
QUIT BLADDER: $HOME/blather/config/plugins/stoplistening.sh

RESTART BLADDER: $HOME/blather/config/plugins/stoplistening.sh && blather &
UPDATE BLADDER CONFIG: $HOME/blather/config/plugins/stoplistening.sh && blather &
UPDATE CONFIG: $HOME/blather/config/plugins/stoplistening.sh && blather &
UPDATE BLADDER: $HOME/blather/config/plugins/stoplistening.sh && blather &
OPEN BLADDER CONFIG FILE: $EDITOR $HOME/blather/config/commands.conf && echo "opening blather config file" | $VOICE &
OPEN BLADDER CONFIG: $EDITOR $HOME/blather/config/commands.conf && echo "opening blather config file" | $VOICE &
BLADDER CONFIG DERR: $KEYTYPE 'cd $HOME/blather/config' && $KEYPRESS Return &
NEW SECTION LABEL: $KEYPRESS Control+c && $KEYTYPE "# ----------- " && $KEYPRESS Control+v && $KEYTYPE " ------------ #" &
SECTION LABEL: $KEYPRESS Control+c && $KEYTYPE "# ----------- " && $KEYPRESS Control+v && $KEYTYPE " ------------ #" &
ECHO VOICE: $KEYTYPE 'echo "" | $VOICE' && $KEYPRESS Left Left Left Left Left Left Left Left Left Left &
ECHO EE SPEAK: $KEYTYPE 'echo "" | espeak' && $KEYPRESS Left Left Left Left Left Left Left Left Left Left &

SET ALARM: $PLUGINS/alarm.sh &

CURRENT UP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &
CURRENT OP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &

HOW LONG HAVE YOU BEEN UP: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &
HOW LONG HAVE YOU BEEN OP: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &

HOW LONG IS YOUR UP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &
HOW LONG IS YOUR OP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &

STATE YOUR OP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &
STATE YOUR UP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &

OP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &
WHAT IS YOUR OP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &

UP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &
WHAT IS YOUR UP TIME: UP=$(uptime -p) && echo "according to my uptime logs i've been $UP now" | $VOICE &

ADD CONFIRM: $KEYTYPE '& echo "yes sir." | $VOICE &' &
ADD CONFIRMATION: $KEYTYPE '& echo "yes sir." | $VOICE &' &

OPEN NOTES: $EDITOR "/home/$(whoami)/Documenten/notes.txt"  &
OPEN TODO: $EDITOR "/home/$(whoami)/Documenten/notes.txt" &
MAKE NOTE: $EDITOR "/home/$(whoami)/Documenten/notes.txt" &


# Command to display the current coordinates of the mouse. Useful
# when trying to automate mouse actions
ECHO MOUSE LOCATION: coords=$(xdotool getmouselocation | sed -e 's/screen.*$//') && $KEYTYPE $coords & echo "this is your current mouse location, sir." | $VOICE
GET MOUSE LOCATION: coords=$(xdotool getmouselocation | sed -e 's/screen.*$//') && gmessage $coords & echo "this is your current mouse location, sir." | $VOICE

# Chrome App: Speech Recognizier -- to turn on the
# mic you must calibrate mic first. To calibrate the mic,
# hover the mouse over the mic icon and say the
# command. It will store the coordinates in text files and the
# "microphone" command will use those coordinates to click the mouse
# in the right spot.

# CALIBRATE MIKE: $CONFIGDIR/scripts/calibrate_mic.sh
# SPEECH RECOGNIZER: wmctrl -a chromium && $KEYPRESS alt+1 Control+l Shift+Tab Shift+Tab Shift+Tab Shift+Tab Shift+Tab Shift+Tab Control+a
# DICTA NOTE: wmctrl -a chromium && $KEYPRESS alt+1 Control+l Shift+Tab Shift+Tab Shift+Tab Shift+Tab Shift+Tab Shift+Tab Control+a
# MICROPHONE: $CONFIGDIR/scripts/mic_on.sh

FIX SPACING: $KEYPRESS Control+a Control+c && text=$(xclip -o | sed -e 's/ * / /g' | sed -e 's/^ * //') && sleep .1 && $KEYTYPE "$text"

# OPEN DICTATION BOX: chromium --app=https://www.google.com/intl/en/chrome/demos/speech.html --app-window-size=600,500 && sleep 1 && $KEYPRESS Tab Tab Return
# GO TO DICTATION BOX: wmctrl -a "Chrome Browser" && $KEYPRESS Control+r && sleep 1 && $KEYPRESS Tab Tab Return
# CLOSE DICTATION BOX: wmctrl -c "Chrome Browser"
# STOP TALKING: $KEYPRESS Tab && sleep .2 && $KEYTYPE '\r'
TRANSFER KEEP: $KEYPRESS Control+c && sleep .1 && $KEYPRESS alt+Tab && sleep .1 && $KEYPRESS Control+v
TRANSFER TEXT: $KEYPRESS Control+c && sleep .1 && $KEYPRESS alt+Tab && sleep .1 && text=$(xclip -o | sed -e 's/[Ss]top talking//') && sleep .1 && $KEYTYPE "$text"
CENTER CURSOR: center=$(xdpyinfo |grep dimensions | awk -F " " '{ print $2 }' | awk -F "x" '{ print $1/2 " " $2/2 }') && $MMOVE $center

# ------- Generic Desktop Commands ------- #
ADDRESS FIELD: $KEYPRESS Control+l
ALWAYS ON TOP: $KEYPRESS alt+space && sleep .2 && $KEYPRESS b
SHOW ON ALL WORKSPACE: $KEYPRESS alt+space && sleep .2 && $KEYPRESS a Return
SHOW ON ONLY THIS WORKSPACE: $KEYPRESS alt+space && sleep .2 && $KEYPRESS a Return

CLOSE DIALOG: $KEYPRESS alt+c
CLOSE TAB: $KEYPRESS Control+w
CLOSE WINDOW: $KEYPRESS Control+q
QUIT WINDOW: $KEYPRESS alt+F4

DONT SAVE: $KEYPRESS alt+d

FIND ON PAGE: $KEYPRESS Control+f
GO BACK: $KEYPRESS alt+Left
PAGE BACK: $KEYPRESS alt+Left
GO FORWARD: $KEYPRESS alt+Right
PAGE FORWARD: $KEYPRESS alt+Right

# LOG ME OUT: $KEYTYPE "'log out"
LOCK SCREEN: $KEYPRESS ctrl+alt+l && echo "screen locked" | $VOICE
# LOG OUT: $KEYTYPE "'logout\r"
NEW FILE: $KEYPRESS Control+n
NEW TAB: $KEYPRESS Control+t

NEW WEB SEARCH: $CHBROWSER https://www.google.com/ &
VOICE SEARCH: $CHBROWSER https://www.google.com/ && sleep 3 && $KEYHOLD Control+Shift period &

NEW WINDOW: $KEYPRESS Control+n
QUIT APPLICATION: $KEYPRESS Control+q
REFRESH PAGE: $KEYPRESS Control+r && echo "page refreshing" | $VOICE
OPEN LAST TAB: $KEYPRESS Control+Shift+t && echo "opening last closed tab" | $VOICE
BLATHER HISTORY: cat $CONFIGDIR/blather.history | $VOICE &
BROWSER HISTORY: $KEYPRESS Control+h

DOWNLOADS: $KEYPRESS Control+j
SAVE FILE: $KEYPRESS Control+s && echo "file saved" | $VOICE
SAVE FILE AS: $KEYPRESS Control+Shift+s && echo "Please state the name and where you would like to save the file sir." | $VOICE

SEARCH FIELD: $KEYPRESS Control+f
# SIGN ME OUT: $KEYTYPE "' out\r"
# SKIP TO MAIN: $KEYTYPE "'skip\r"

PAGE DOWN: $KEYPRESS Page_Down
PAGE UP: $KEYPRESS Page_Up

NEXT TAB: $KEYPRESS Control+Page_Down
PREVIOUS TAB: $KEYPRESS Control+Page_Up

TAB ONE: $KEYPRESS alt+1
TAB TWO: $KEYPRESS alt+2
TAB THREE: $KEYPRESS alt+3
TAB FOUR: $KEYPRESS alt+4
TAB FIVE: $KEYPRESS alt+5
TAB SIX: $KEYPRESS alt+6
TAB SEVEN: $KEYPRESS alt+7
TAB EIGHT: $KEYPRESS alt+8
TAB NINE: $KEYPRESS alt+9
TAB TEN: $KEYPRESS alt+0

USERNAME FIELD: $KEYTYPE "/username\[Tab]"

META F TWO: $KEYPRESS alt+F2
APP LAUNCHER: $KEYPRESS alt+F2
CATAPULT: $KEYPRESS alt+F2

# General purpose navigation and desktop control commands
#CYCLE WINDOWS: xvkbd -no-jump-pointer -secure -text '\A\[`]'
#NEXT WORKSPACE: $KEYPRESS Control+alt+Right
#MOVE TO NEXT WORKSPACE: xvkbd -no-jump-pointer -secure -text '\C\A\S\[Down]'
#MOVE TO NEXT WORKSPACE: $KEYPRESS alt+space && sleep .1 && $KEYPRESS s 2
#PREVIOUS WORKSPACE: $KEYPRESS Control+alt+Left
#MOVE TO PREVIOUS WORKSPACE: $KEYPRESS alt+space && sleep .1 && $KEYPRESS s 1
#MOVE TO PREVIOUS WORKSPACE: xvkbd -no-jump-pointer -secure -text '\C\A\S\[Up]'

MOVE WORKSPACE UP: $KEYPRESS Control+Shift+alt+Up
MOVE WORKSPACE OP: $KEYPRESS Control+Shift+alt+Up
MOVE WORKSPACE DOWN: $KEYPRESS Control+Shift+alt+Down
MOVE WORKSPACE LEFT: $KEYPRESS Control+Shift+alt+Left
MOVE WORKSPACE RIGHT: $KEYPRESS Control+Shift+alt+Right

MOVE TO WORKSPACE ONE: $KEYPRESS alt+space && sleep .2 && $KEYPRESS v v Right 1 Return
MOVE TO WORKSPACE TWO: $KEYPRESS alt+space && sleep .2 && $KEYPRESS v v Right 2 Return
MOVE TO WORKSPACE THREE: $KEYPRESS alt+space && sleep .2 && $KEYPRESS v v Right 3 Return
MOVE TO WORKSPACE FOUR: $KEYPRESS alt+space && sleep .2 && $KEYPRESS v v Right 4 Return

WORKSPACE UP: $KEYPRESS Control+alt+Up
WORKSPACE OP: $KEYPRESS Control+alt+Up
WORKSPACE DOWN: $KEYPRESS Control+alt+Down
WORKSPACE LEFT: $KEYPRESS Control+alt+Left
WORKSPACE RIGHT: $KEYPRESS Control+alt+Right

SHOW DESKTOP: $KEYPRESS Super_L+d
SHOW ALL DESKTOPS: $KEYPRESS Super_L+s
SHOW WINDOWS: $KEYPRESS Super_L+w
SHOW WINDOWS OF CURRENT DESKTOP: $KEYPRESS Super_L+w
SHOW ALL WINDOWS: $KEYPRESS Shift+Super_L+w
SHOW WINDOWS OF ALL DESKTOPS: $KEYPRESS Shift+Super_L+w

MOVE WINDOW: $KEYPRESS alt+F7  && echo "Where would you like to move this window sir?" | $VOICE &
MOVE TO LEFT: $KEYPRESS Control+Super_L+Left
SHOW ON LEFT: $KEYPRESS Control+Super_L+Left
MOVE WINDOW TO LEFT SIDE: $KEYPRESS Control+Super_L+Left && $CLICK 1
MOVE TO RIGHT: $KEYPRESS Control+Super_L+Right
SHOW ON RIGHT: $KEYPRESS Control+Super_L+Right
MOVE WINDOW TO RIGHT SIDE: $KEYPRESS Control+Super_L+Right && $CLICK 1

SEARCH APPLICATIONS: $KEYPRESS Super_L+a & echo "These are your applications sir." | $VOICE &
SEARCH FILES: $KEYPRESS Super_L+f & echo "These are your files sir." | $VOICE &
SEARCH MUSIC: $KEYPRESS Super_L+m & echo "This is your music sir." | $VOICE &
SEARCH PHOTOS: $KEYPRESS Super_L+c & echo "These are your photos sir." | $VOICE &
SEARCH VIDEOS: $KEYPRESS Super_L+v & echo "These are your videos sir." | $VOICE &

TAKE SCREENSHOT: $KEYPRESS Print
TAKE SCREENSHOT AND COPY: $KEYPRESS Control+Print

TAKE SCREENSHOT OF WINDOW: $KEYPRESS alt+Print
TAKE SCREENSHOT OF WINDOW AND COPY: $KEYPRESS Control+alt+Print

TAKE SCREENSHOT OF REGION: $KEYPRESS Shift+Print
TAKE SCREENSHOT OF REGION AND COPY: $KEYPRESS Control+Shift+Print

ZOOM IN: $KEYPRESS Control+plus
ZOOM OUT: $KEYPRESS Control+minus

FILE SPECS: $KEYPRESS alt+Return
FILE SPECIFICATIONS: $KEYPRESS alt+Return

# ----------- Keystrokes ------------ #

BACK SPACE: $KEYPRESS BackSpace
CANCEL: $KEYPRESS Escape
COLON: $KEYTYPE ":"
COMMA: $KEYTYPE ","
CONTROL ARE: $KEYPRESS Control+r
CONTROL A: $KEYPRESS Control+a
CONTROL B: $KEYPRESS Control+b
CONTROL C: $KEYPRESS Control+c
CONTROL D: $KEYPRESS Control+d
CONTROL ENTER: $KEYPRESS Control+Return
CONTROL E: $KEYPRESS Control+e
CONTROL F: $KEYPRESS Control+f
CONTROL H: $KEYPRESS Control+h
CONTROL IN: $KEYPRESS Control+n
CONTROL I: $KEYPRESS Control+i
CONTROL L: $KEYPRESS Control+l
CONTROL K: $KEYPRESS Control+k
CONTROL O: $KEYPRESS Control+o
CONTROL P: $KEYPRESS Control+p
CONTROL SHIFT C: $KEYPRESS Control+C
CONTROL SHIFT E: $KEYPRESS Control+E
CONTROL SHIFT IN: $KEYPRESS Control+N
CONTROL SHIFT O: $KEYPRESS Control+O
CONTROL SHIFT V: $KEYPRESS Control+V
CONTROL SHIFT W: $KEYPRESS Control+W

SELECT ALL: $KEYPRESS Control+a
START SELECTION: $KEYHOLD Shift
STOP SELECTION: $KEYPRESS Shift
OPEN FILE: $KEYPRESS Control+O

EDIT MENU: $KEYPRESS alt+e
DOCUMENT MENU: $KEYPRESS alt+d
FILE MENU: $KEYPRESS alt+f
HELP MENU: $KEYPRESS alt+h
INSERT MENU: $KEYPRESS alt+i
FORMAT MENU: $KEYPRESS alt+o
TOOLS MENU: $KEYPRESS alt+t
VIEW MENU: $KEYPRESS alt+d

EQUALS: $KEYTYPE "="
EXCLAMATION POINT: $KEYTYPE "!"
FIVE SPACES: $KEYTYPE "     "
FOUR SPACES: $KEYTYPE "    "
HASH TAG: $KEYTYPE "#"

# ----------- Cursor movement ------------ #
UP ARROW: $KEYPRESS Up
DOWN ARROW: $KEYPRESS Down
LEFT ARROW: $KEYPRESS Left
RIGHT ARROW: $KEYPRESS Right

# ----------- Press a number ------------ #
PRESS ZERO: $KEYPRESS 0
PRESS ONE: $KEYPRESS 1
PRESS TWO: $KEYPRESS 2
PRESS THREE: $KEYPRESS 3
PRESS FOUR: $KEYPRESS 4
PRESS FIVE: $KEYPRESS 5
PRESS SIX: $KEYPRESS 6
PRESS SEVEN: $KEYPRESS 7
PRESS EIGHT: $KEYPRESS 8
PRESS NINE: $KEYPRESS 9


#MAXIMIZE WINDOW: $KEYPRESS alt+space && sleep .1 && $KEYPRESS x
MAXIMIZE WINDOW: $KEYPRESS Control_L+Super_L+Up # for gnome 3
MINIMIZE WINDOW: $KEYPRESS Control_L+Super_L+Down # for gnome 3

META BOB: $KEYPRESS alt+b
META C: $KEYPRESS alt+c
META EFF TWO: $KEYPRESS alt+F2
META EYE: $KEYPRESS alt+i
META L: $KEYPRESS alt+l
META m: $KEYPRESS alt+m
META n: $KEYPRESS alt+n
META P: $KEYPRESS alt+p
# It kept confusing the letter S with the letter F so I had to
# substitute a word how to get it right. "Scooby" :)
META SCOOBY: $KEYPRESS alt+s
META W: $KEYPRESS alt+w
PERIOD: $KEYTYPE "."
PRESS DELETE: $KEYPRESS Delete
PRESS END: $KEYPRESS End
PRESS YES: $KEYPRESS J && $KEYPRESS Return
PRESS NO: $KEYPRESS N && $KEYPRESS Return
PRESS ENTER: $KEYPRESS Return
PRESS ESCAPE: $KEYPRESS Escape
ESCAPE: $KEYPRESS Escape

PRESS F: $KEYPRESS f
PRESS HOME: $KEYPRESS Home
PRESS Q: $KEYPRESS q
PRESS TAB: $KEYPRESS Tab
QUESTION MARK: $KEYPRESS question
#RESTORE WINDOW: $KEYPRESS alt+space && sleep .1 && $KEYPRESS e
RESTORE WINDOW: $KEYPRESS Super_L+Down # for gnome 3
SEMICOLON: $KEYTYPE ";"
SPACE BAR: $KEYPRESS space
SUPER KEY: $KEYPRESS Super_L
SWITCH BACK: $KEYPRESS alt+Tab
SWITCH WINDOW: $KEYPRESS alt+Tab
SWITCH SWITCH WINDOW: $KEYPRESS alt+Tab+alt+Tab
TILDE: $KEYTYPE "~"

# ----------- Vim ------------ #


APPEND TO CURRENT LINE: $KEYTYPE "A"
CHANGE WORD: $KEYTYPE "cw"
CLICK AND HOLD: xdotool mousedown 1
CLICK HERE: $CLICK 1
COLON DOLLAR SIGN: $KEYTYPE ":$\r"
COLON W: $KEYTYPE ":w\r"
COLON ZERO: $KEYTYPE ":0\r"
DELETE LINES: $KEYTYPE "dd"
DELETE WORD: $KEYTYPE "dw"
LEFT CLICK: $CLICK 1
# MIDDLE CLICK: $KEYPRESS ctrl+shift+v
MIDDLE CLICK: $CLICK 2
RIGHT CLICK: $CLICK 3
DOUBLE CLICK: $CLICK 1 ; $CLICK 1

SCROLL UP: $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 &
MOUSE WHEEL UP: $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 & $CLICK 4 &
SCROLL DOWN: $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 &
MOUSE WHEEL DOWN: $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 & $CLICK 5 &

NEW LINE ABOVE: $KEYPRESS Home && $KEYPRESS Return && $KEYPRESS End
NEW LINE BELOW: $KEYPRESS End && $KEYPRESS Return && $KEYPRESS Left
NEXT BUFFER: $KEYPRESS ctrl+w j
PRESS I: $KEYTYPE "i"
PREVIOUS BUFFER: $KEYPRESS ctrl+w k
PUT AFTER: $KEYTYPE "p"
PUT BEFORE: $KEYTYPE "P"
SPLIT BUFFER: $KEYTYPE ":sp "
WRITE AND QUIT: $KEYTYPE ":wq\r"
YANK LINES: $KEYTYPE "yy"
YANK TO THE END: $KEYTYPE "y$"
YANK WORD: $KEYTYPE "yw"
ZEE OUT: $KEYTYPE "ZZ"



# ----------- Website Shortcuts ------------ #
# GO TO AMAZON: $BROWSER http://www.amazon.com/ && sleep 1 && $KEYTYPE "/search\[Tab]\[Tab]"
# GO TO E BAY: $BROWSER http://www.ebay.com/

GOOGLE THIS: $KEYPRESS Control+c && wmctrl -a $BROWSER && $KEYPRESS Control+t Control+k Control+v Return

WOLFRAM:$CHBROWSER https://www.wolframalpha.com/ && sleep 3 &&
WOLFRAM THIS: $KEYPRESS Control+c && $CHBROWSER https://www.wolframalpha.com/input/?i=$(xclip -o) &

# ----------- Gmail ------------ #

GO TO INBOX: $KEYTYPE "gi"
SELECT ALL UNREAD: $KEYTYPE "*u"
MOVE TO TRASH: $KEYTYPE "#"

#========================================================================
# Dealing with the file manager is much easier when you use thunar
# because it does not keep changing the window title the way nautilus
# does. In order to switch between machines having nautilus and
# thunar I created a couple of scripts. Not using them right now
# because I'm not using nautilus on any of my computers at the moment.
#========================================================================

OPEN FILE MANAGER: $FM &
GO TO FILE MANAGER: wmctrl -a "File Manager"
QUIT FILE MANAGER: pkill $FM

# SHOW CLIP BOARD: $KEYPRESS Control+alt+h &


OPEN CHROMIUM: chromium-browser &
GO TO CHROMIUM: wmctrl -a chromium-browser
QUIT CHROMIUM: wmctrl -c chromium-browser

# OPEN CHROME: google-chrome &
# GO TO CHROME: wmctrl -a Google Chrome
# QUIT CHROME: wmctrl -c Google Chrome

# OPEN HANGOUTS: google-chrome --app= hangouts.google.com &
# GO TO HANGOUTS: wmctrl -a Google Hangouts
# QUIT HANGOUTS: wmctrl -c Google Hangouts

OPEN CALCULATOR: xcalc &
GO TO CALCULATOR: wmctrl -a xcalc
QUIT CALCULATOR: wmctrl -c xcalc

# OPEN AUTO KEY: autokey &
# GO TO AUTO KEY: wmctrl -a AutoKey
# QUIT AUTO KEY: wmctrl -c Autokey

OPEN QUA CEL: quasselclient &
GO TO QUA CEL: wmctrl -a Quassel IRC
QUIT QUA CEL: wmctrl -c Quassel IRC

# OPEN EX CHAT: xchat &
# GO TO EX CHAT: wmctrl -a xchat
# QUIT EX CHAT: wmctrl -c xchat
# POST FROM EX CHAT: $KEYPRESS Control+a Control+c && wmctrl -a xchat && $KEYPRESS Control+a Control+v && sleep .2 && $KEYTYPE "\r"
# EX CHAT REPLY: $KEYPRESS Control+a Control+c && wmctrl -a chromium && $KEYPRESS alt+1 Control+l Shift+Tab Shift+Tab Shift+Tab Shift+Tab Shift+Tab Shift+Tab Control+a Control+v

# OPEN FIREFOX: firefox &
# GO TO FIREFOX: wmctrl -a firefox
# QUIT FIREFOX: wmctrl -c firefox
# FIREFOX PREFERENCES: $KEYPRESS alt+e n

# OPEN FILE ZILLA: filezilla &
# GO TO FILE ZILLA: wmctrl -a filezilla
# QUIT FILE ZILLA: wmctrl -c filezilla
# SITE MANAGER: $KEYPRESS Control+s

OPEN V L C: vlc &
GO TO V L C: wmctrl -a vlc
QUIT V L C: wmctrl -c vlc
PLAY FASTER: $KEYPRESS alt+l e f
NORMAL SPEED: $KEYPRESS alt+l e o
HALF SIZE: $KEYPRESS alt+v z Down Return
FULL SIZE: $KEYPRESS alt+v z Down Down Return
OPEN VOLUME CONTROL: pavucontrol &
GO TO VOLUME CONTROL: wmctrl -a "Volume Control"

# ----------- Terminator ------------ #
# this requires fancy stuff b/c window Title doesn't match app name
# OPEN TERMINATOR: terminator &
# GO TO TERMINATOR: tid=$(pgrep termin) && termwin=$(wmctrl -lp |grep $tid | awk -F " " '{ print $1 }') && wmctrl -i -a $termwin
# QUIT TERMINATOR: pkill termin

OPEN TERMINAL: lxterm &
GO TO TERMINAL: tid=$(pgrep lxterm) && termwin=$(wmctrl -lp |grep $tid | awk -F " " '{ print $1 }') && wmctrl -i -a $termwin
QUIT TERMINATOR: pkill termin

# ----------- Gnome-terminal ------------ #
# this requires fancy stuff b/c window Title doesn't match app name
# OPEN TERMINAL: gnome-terminal &
# GO TO TERMINAL: tid=$(pgrep gnome-terminal) && termwin=$(wmctrl -lp |grep $tid | awk -F " " '{ print $1 }') && wmctrl -i -a $termwin
# QUIT TERMINAL: pkill termin

OPEN LIBREOFFICE: loffice &
OPEN WRITER: libreoffice --writer &
GO TO WRITER: wmctrl -a writer
QUIT WRITER: wmctrl -c writer
QUIT LIBREOFFICE: wmctrl -c libreoffice
GO TO LIBREOFFICE: wmctrl -a libreoffice
RECENT L O FILES: $KEYPRESS alt+f u

# ----------- Gedit -------------#

OPEN GEE EDIT: gedit &
GO TO GEE EDIT: wmctrl -a gedit
QUIT GEE EDIT: wmctrl -c gedit

# ----------- Leafpsd -------------#

OPEN LEAF PAD: leafpad &
GO TO LEAF PAD: wmctrl -a leafpad
QUIT LEAF PAD: wmctrl -c leafpad

# ----------- Geany -------------#

OPEN GEANY: geany &
GO TO GEANY: wmctrl -a geany
QUIT GEANY: wmctrl -c geany

# ----------- Gmail ------------ #

OPEN GEE MAIL: $BROWSER gmail.com

# ------ System Administration -------#

APACHE CONFIG DERR: $KEYTYPE 'cd /etc/apache2/sites-available/' && $KEYPRESS Return
APT CASH SEARCH: $KEYTYPE 'apt-cache search '
APT GET INSTALL: $KEYTYPE 'apt-get install '
APT INSTALL: $KEYTYPE 'apt install '
APT UPDATE: $KEYTYPE 'apt update '
APT UPGRADE: $KEYTYPE 'apt upgrade '
APT DIST UPGRADE: $KEYTYPE 'apt dist-upgrade ' && $KEYPRESS Return
APT UPDATE: $KEYTYPE 'apt update ' && $KEYPRESS Return
APT UPGRADE: $KEYTYPE 'apt upgrade ' && $KEYPRESS Return
ENGINE EX CONFIG DERR: $KEYTYPE 'cd /etc/nginx/sites-available/'
EXIT: $KEYTYPE 'exit' && $KEYPRESS Return
UPDATE SYSTEM: update-manager &
SYSTEM UPDATE: update-manager &
UPDATE MANAGER: update-manager &
SYNAPTIC: gksu synaptic &
SOFTWARE PROPERTIES: software-properties-gtk &
SOFTWARE AND UPDATES: software-properties-gtk &
GIT COMMIT ALL: $KEYTYPE "git commit -a" && $KEYPRESS Return &
GIT PULL: $KEYTYPE "git pull" && $KEYPRESS Return &
GIT PUSH: $KEYTYPE "git push origin PCM" && $KEYPRESS Return &
GET PUSH: $KEYTYPE "git push origin PCM" && $KEYPRESS Return &

GIT MERGE: $KEYTYPE "git merge origin PCM" && $KEYPRESS Return &
GIT ADD: $KEYTYPE "git add " &
GIT STATUS: $KEYTYPE "git status" && $KEYPRESS Return &


GET WINDOW PID: echo "Please click the window of which you want the process ID" | $VOICE && pid=$(xprop _NET_WM_PID | cut -d' ' -f3) && gmessage $pid && echo "That windows process ID is $pid" | $VOICE && echo "$pid" | clipit &
PRINT WINDOW PID: echo "Please click the window of which you want the process ID" | $VOICE && pid=$(xprop _NET_WM_PID | cut -d' ' -f3) && echo "That windows process ID is $pid, I have printed it for you" | $VOICE && $KEYTYPE $pid && echo "$pid" | clipit &
KILL WINDOW: echo "Please click the window of which you want to kill the process ID" | $VOICE && pid=$(xprop _NET_WM_PID | cut -d' ' -f3) && kill $pid && echo "That windows process ID was $pid, may he rest in peace." | $VOICE && echo "$pid" | clipit &

HOME BIN: $KEYTYPE 'cd ~/bin' && $KEYPRESS Return
IN IT EXPRESSION : $KEYTYPE 'sudo /etc/init.d/'

INSERT AWK EXPRESSION: $KEYTYPE "$(cat $CONFIGDIR/data/awk.txt)"
INSERT SED EXPRESSION: $KEYTYPE "$(cat $CONFIGDIR/data/sed.txt)"
# 	LESS INSTALL: $KEYTYPE "less INSTAL\[Tab]\r"
# 	LESS READ ME: $KEYTYPE "less READM\[Tab]\r"
PACKAGE INFO: $KEYTYPE 'apt-cache show '
PACKAGE SEARCH: $KEYTYPE 'apt-cache search '
PING TEST: $KEYTYPE 'ping -c 3 www.google.com' && $KEYPRESS Return
RESTART APACHE: $KEYTYPE '/etc/init.d/apache2 restart' && $KEYPRESS Return
RESTART ENGINE EX: $KEYTYPE '/etc/init.d/nginx restart' && $KEYPRESS Return
SEE RETURN CODE: $KEYTYPE "echo $?" && $KEYPRESS Return
sites available: $KEYTYPE 'cd ../sites-available/' && $KEYPRESS Return
sites enabled: $KEYTYPE 'cd ../sites-enabled/' && $KEYPRESS Return
SLASH ET SEE: $KEYTYPE 'cd /etc' && $KEYPRESS Return
SYSTEM LOG DERR: $KEYTYPE 'cd /var/log/' && $KEYPRESS Return
SUDO: $KEYTYPE 'sudo '
UPDATE ALTERNATIVES: $KEYTYPE "sudo update-alternatives --config "
USER BIN: $KEYTYPE 'cd /usr/bin' && $KEYPRESS Return
USER LOCAL BIN: $KEYTYPE 'cd /usr/local/bin' && $KEYPRESS Return
WEB FILES DERR: $KEYTYPE 'cd /var/www/' && $KEYPRESS Return
WEBSERVER PERMISSIONS: $KEYTYPE 'chown -R www-data:www-data ' && $KEYPRESS Return


# ----------- editing ----------- #

SELECT ALL: $KEYPRESS Control+a
SELECT THIS WORD: $KEYPRESS Control+Left Control+Shift+Right
#SELECT THIS WORD: $KEYTYPE "\C\[Left]\C\[Shift]\[Right]"
SELECT THIS SENTENCE: $KEYPRESS Home && $KEYPRESS Shift+End
COPY THIS SENTENCE: $KEYPRESS Home && $KEYPRESS Shift+End && $KEYPRESS Control+c

# BUGGY!! NEEDS FIXING
#DELETE THIS SENTENCE: text=/tmp/text.txt && $KEYPRESS Shift+Page_Down && $KEYPRESS Control+c && sleep .1 && xclip -o | sed -n 's/[^.]*.//1p' > $text && xvkbd -xsendevent -secure -file "$text" && sleep .5 && rm $text

ANGLE BRACKET THIS: $KEYPRESS Control+c && $KEYTYPE '<'"$(xclip -o)"'>'
CAMEL CAPS THIS: $KEYPRESS Control+c && xclip -o | sed -r 's/\<./\U&/g' | sed -e 's/ //g'| xclip -i && $KEYTYPE "$(xclip -o)"
CAPITALIZE THIS: $KEYPRESS Control+c && xclip -o | sed -r 's/\<./\U&/g' | xclip -i && $KEYTYPE "$(xclip -o)"

COPY: $KEYPRESS Control+c
CUT: $KEYPRESS Control+x
PASTE: $KEYPRESS Control+v
UNFORMATTED PASTE: $KEYPRESS Control+v

SELECT PREVIOUS SENTENCE: $KEYPRESS Control+Shift+BackSpace && $KEYPRESS Control+z
SELECT THIS SENTENCE: $KEYPRESS Home && $KEYPRESS Shift+End

DELETE PREVIOUS SENTENCE: $KEYPRESS Up && $KEYPRESS Home && $KEYPRESS Control+Shift+Delete
DELETE THIS SENTENCE: $KEYPRESS Home && $KEYPRESS Control+Shift+Delete
# EXPAND CONTRACTIONS: expansions=/tmp/expand.txt && cat $CONFIGDIR/scripts/contractions.sed | awk -F "/" '{ print "s/"$3"/" $2 "/g" }' > $expansions && sleep .2 && $KEYPRESS Control+c && xclip -o | sed -f $expansions | xclip -i && $KEYTYPE "$(xclip -o)" && rm $expansions


# ----------- Smily faces ------------ #
SMILEY FACE: $KEYTYPE ":)" & echo "ha ha very funny sir" | $VOICE
FROWNEY FACE: $KEYTYPE ":(" & echo "Tis a sad day for A C S I I " | $VOICE
HUGE GRIN FACE: $KEYTYPE "8^D" & echo "Huge grin indeed sir." | $VOICE

GRAB THAT: $KEYPRESS Control+a Control+c & echo "Grabbed it all sir" | $VOICE

HYPHENATE THIS: $KEYPRESS Control+c && xclip -o | sed -e 's/ /-/g' | xclip -i && $KEYTYPE "$(xclip -o)"
# MAKE CONTRACTIONS: $KEYPRESS Control+c && xclip -o | sed -f $CONFIGDIR/scripts/contractions.sed | xclip -i && $KEYTYPE "$(xclip -o)"

MAKE LOWERCASE: $KEYPRESS Control+c && xclip -o | sed 's/\(.*\)/\L\1/' | xclip -i && $KEYTYPE "$(xclip -o)"
MAKE UPPERCASE: $KEYPRESS Control+c && xclip -o | sed 's/\(.*\)/\U\1/' | xclip -i && $KEYTYPE "$(xclip -o)"

NEXT WORD: $KEYPRESS Control+Right
PREVIOUS WORD: $KEYPRESS Control+Left

OPTIMAL COLUMN WIDTH: $KEYPRESS alt+o m o Return

PERENTHESIZE THIS: $KEYPRESS Control+c && $KEYTYPE '('"$(xclip -o)"')'
QUOTE THIS: $KEYPRESS Control+c && $KEYTYPE '"' && $KEYPRESS Control+v && $KEYTYPE '"'
REMOVE SPACES: $KEYPRESS Control+c && xclip -o | sed -e 's/ //g' | xclip -i && $KEYTYPE "$(xclip -o)"
SMART QUOTES: $KEYPRESS Control+c && $KEYTYPE '&#8220;' && $KEYPRESS Control+v && $KEYTYPE '&#8221;'

# AWESOMENESS COMING NEXT
SORT THIS: $KEYPRESS Control+c && xclip -o > /tmp/unsorted.txt && sort /tmp/unsorted.txt > /tmp/sorted.txt && $KEYTYPE "$(cat /tmp/sorted.txt)"
SPACES TO UNDERSCORES: $KEYPRESS Control+c && xclip -o | sed -e 's/ /_/g' | xclip -i && $KEYTYPE "$(xclip -o)"
UNDO: $KEYPRESS Control+z
X D O TOOL KEY: $KEYTYPE "$KEYPRESS "

INSERT KEY PRESS: $KEYTYPE '$KEYPRESS '
INSERT KEY TYPE: $KEYTYPE '$KEYTYPE '
ITALICIZE: $KEYPRESS Control+i
MAKE BOLD: $KEYPRESS Control+b

# ----------- text entry ----------- #

ENTER FIRST NAME: $KEYTYPE "Bauke"
ENTER LAST NAME: $KEYTYPE "Molenaar"
ENTER NICK NAME: $KEYTYPE "itsdarklikehell"
ENTER FULL NAME: $KEYTYPE "Bauke Molenaar"
ENTER CELL PHONE: $KEYTYPE "$(cat $CONFIGDIR/data/cell.txt)"
ENTER OFFICE PHONE: $KEYTYPE "$(cat $CONFIGDIR/data/office.txt)"
ENTER FIBER EMAIL: $KEYTYPE "$(cat $CONFIGDIR/data/fiber.txt)"
ENTER GEE MAIL ADDRESS: $KEYTYPE "$(cat $CONFIGDIR/data/gmail.txt)"
ENTER WORK EMAIL: $KEYTYPE "$(cat $CONFIGDIR/data/workmail.txt)"
ENTER DADS EMAIL: $KEYTYPE "$(cat $CONFIGDIR/data/dad.txt)"
ENTER STREET: $KEYTYPE "$(cat $CONFIGDIR/data/street.txt)"
ENTER CITY: $KEYTYPE "$(cat $CONFIGDIR/data/city.txt)"
ENTER ZIP: $KEYTYPE "$(cat $CONFIGDIR/data/zip.txt)"
ENTER FULL ADDRESS: xvkbd -xsendevent -secure -file $CONFIGDIR/data/homeaddress.txt


# ------- Media -- Depends on mpg123 ------ #
VOLUME DOWN: $KEYPRESS XF86AudioLowerVolume XF86AudioLowerVolume && echo "volume down" | $VOICE
LOWER VOLUME: $KEYPRESS XF86AudioLowerVolume XF86AudioLowerVolume && echo "volume down" | $VOICE
RAISE VOLUME: $KEYPRESS XF86AudioRaiseVolume XF86AudioRaiseVolume && echo "volume up" | $VOICE
VOLUME UP: $KEYPRESS XF86AudioRaiseVolume XF86AudioRaiseVolume && echo "volume up" | $VOICE

VOLUME MAX: amixer set PCM 200% && echo "volume set to max" | $VOICE
VOLUME HUNDERED PROCENT: amixer set PCM 100% && echo "volume set to 100%" | $VOICE
VOLUME NINETY PROCENT: amixer set PCM 90% && echo "volume set to 90%" | $VOICE
VOLUME AIGHTY PROCENT: amixer set PCM 80% && echo "volume set to 80%" | $VOICE
VOLUME SEVENTY PROCENT: amixer set PCM 70% && echo "volume set to 70%" | $VOICE
VOLUME SIXTY PROCENT: amixer set PCM 60% && echo "volume set to 60%" | $VOICE
VOLUME FIFTY PROCENT: amixer set PCM 50% && echo "volume set to 50%" | $VOICE
VOLUME FOURTY PROCENT: amixer set PCM 40% && echo "volume set to 40%" | $VOICE
VOLUME THIRTY PROCENT: amixer set PCM 30% && echo "volume set to 30%" | $VOICE
VOLUME TWENTY PROCENT: amixer set PCM 20% && echo "volume set to 20%" | $VOICE
VOLUME TEN PROCENT: amixer set PCM 10% && echo "volume set to 10%" | $VOICE
VOLUME ZERO PROCENT: amixer set PCM 0% && echo "volume set to 0%" | $VOICE

MUTE SOUND: $KEYPRESS XF86AudioMute
UN MUTE SOUND: $KEYPRESS XF86AudioMute
NEXT TRACK: $KEYPRESS XF86AudioNext
PREVIOUS TRACK: $KEYPRESS XF86AudioPrev XF86AudioPrev
REPLAY TRACK: $KEYPRESS XF86AudioPrev
RESTART TRACK: $KEYPRESS XF86AudioPrev

PAUSE PLAY: $KEYPRESS XF86AudioPlay
PLAY PAUSE: $KEYPRESS XF86AudioPlay

# BRIGHTNESS UP: $KEYPRESS XF86MonBrightnessUp
# BRIGHTNESS DOWN: $KEYPRESS XF86MonBrightnessDown
# SCREEN OFF: xset dpms force off
# BRIGHTNESS MAX: xbacklight -set 100 &
# BRIGHTNESS HUNDRED PROCENT: xbacklight -set 100 &
# BRIGHTNESS NINETY PROCENT: xbacklight -set 90 &
# BRIGHTNESS EIGHTY PROCENT: xbacklight -set 80 &
# BRIGHTNESS SEVENTY PROCENT: xbacklight -set 70 &
# BRIGHTNESS SIXTY PROCENT: xbacklight -set 60 &
# BRIGHTNESS FIFTY PROCENT: xbacklight -set 50 &
# BRIGHTNESS FOURTY PROCENT: xbacklight -set 40 &
# BRIGHTNESS THIRTY PROCENT: xbacklight -set 30 &
# BRIGHTNESS TWENTY PROCENT: xbacklight -set 20 &
# BRIGHTNESS TEN PROCENT: xbacklight -set 10 &
# BRIGHTNESS ZERO PROCENT: xbacklight -set 0 &

# ----------- WEB RADIO ------------ #
RADIO 3FM: mpg123 --quiet -@ http://icecast.omroep.nl/3fm-bb-mp3.m3u &
RADIO SLAM FM: mpg123 --quiet -@ http://edge2-icecast.538.lw.triple-it.nl/SLAMFM_MP3.m3u &
RADIO 538: mpg123 --quiet -@ http://vip-icecast.538.lw.triple-it.nl/RADIO538_MP3.m3u &
# RADIO 538 COMEDY: mpg123 --quiet -@ http://538.tunein.fm/538start?cid=91272 &
RADIO FUN X: mpg123 --quiet -@ http://icecast.omroep.nl/funx-bb-mp3 &
RADIO ARROW CLASSIC ROCK: mpg123 --quiet -@ http://www.garnierstreamingmedia.com/asx/streamerswitch.asp?stream=205 &

RADIO ANON OPS: mpg123 --quiet -@ http://stream.anonops.com:8080/AnonOps &
RADIO DEF CON: mpg123 --quiet -@ https://somafm.com/defcon256.pls &

SET SLEEP TIMER: $PLUGINS/sleep_timer.sh &

STOP RADIO: pkill mpg123 & echo "radio stopped" | $VOICE &
KILL RADIO: pkill mpg123 & echo "radio stopped" | $VOICE &
QUIT RADIO: pkill mpg123 & echo "radio stopped" | $VOICE &

# ----------- WEB TV ------------ #
YOUTUBE AUDIO BOOKS: $BROWSER https://www.youtube.com/ && sleep 3 && $KEYTYPE "audiobook" && $KEYPRESS Return &

AUDIO BOOKS: $BROWSER https://www.youtube.com/ && sleep 1.5 && $KEYTYPE "audiobook" && $KEYPRESS Return &
GO TO YOU TUBE: $BROWSER https://www.youtube.com/ && sleep 1.5 && $KEYPRESS ?
GO TO NIGHT ATTACK: $BROWSER http://nightattack.tv/ & echo "going to night attack dot tv" | $VOICE &
GO TO DIAMOND CLUB: $BROWSER http://diamondclub.tv/ & echo "going to diamond club dot tv" | $VOICE &
GO TO TWITCH: $BROWSER http://twitch.tv/ && echo "going to twitch dot tv" | $VOICE &
GO TO NETFLIX: $BROWSER www.netflix.com
GO TO DUMPERT: $BROWSER www.dumpert.nl

# NO SCRIPT ALLOW: $CLICK 3 & $KEYTYPE n a & $KEYPRESS Return &
# NO SCRIPT ALLOW TOP SITE: $KEYPRESS Control_L+Shift_L+backslash &


# ------- Markdown, html, gift, bash, etc ------- #
ALTERNATE TEXT EQUALS THIS: $KEYTYPE ' alt=""' && $KEYPRESS Left Control+v Right
ARTICLE TAGS: $KEYPRESS Control+c && $KEYTYPE '<article>' && $KEYPRESS Control+v && $KEYTYPE '</article>'
ASIDE TAGS: $KEYPRESS Control+c && $KEYTYPE '<aside>' && $KEYPRESS Control+v && $KEYTYPE '</aside>'
BASH HEADER: $KEYTYPE '#!/bin/bash'
block quote tags: $KEYPRESS Control+c && $KEYTYPE '<blockquote>' && $KEYPRESS Control+v && $KEYTYPE '</blockquote>'
center tags: $KEYPRESS Control+c && $KEYTYPE '<center>' && $KEYPRESS Control+v && $KEYTYPE '</center>'
citation tags: $KEYPRESS Control+c && $KEYTYPE '<cite>' && $KEYPRESS Control+v && $KEYTYPE '</cite>'
CLASS EQUALS RIGHT: $KEYTYPE ' class="right"'
CLASS EQUALS THIS: $KEYTYPE ' class=""' && $KEYPRESS Left Control+v Right
CLASS IS RIGHT: $KEYTYPE ' class="right"'
CLOSE CENTER TAG: $KEYTYPE '</center>'
CLOSE D I V TAG: $KEYTYPE '</div>'
CLOSE H REF: $KEYTYPE '</a>'
close p tag: $KEYTYPE '</p>'
C S S COMMANDO: $KEYPRESS Control+c && $KEYTYPE '/* ' && $KEYPRESS Control+v && $KEYTYPE ' */'
C S S HEADER: $KEYTYPE '<style type="text/css">' && $KEYPRESS enterkey && $KEYTYPE '</style>' && $KEYPRESS Left Left Left Left Left Left Left Left &


definition data TAGS: $KEYPRESS Control+c && $KEYTYPE '<dd>' && $KEYPRESS Control+v && $KEYTYPE '</dd>'
definition term TAGS: $KEYPRESS Control+c && $KEYTYPE '<dt>' && $KEYPRESS Control+v && $KEYTYPE '</dt>'
display block: $KEYTYPE 'display: block;'
display inline: $KEYTYPE 'display: inline;'
display none: $KEYTYPE 'display: none;'
D I V TAGS: $KEYPRESS Control+c && $KEYTYPE "<div>" && $KEYPRESS Control+v && $KEYTYPE "</div>"
EMAIL HYPERLINK: $KEYPRESS Control+c && $KEYTYPE '<a href="mailto:' && $KEYPRESS Control+v && $KEYTYPE '">' && $KEYPRESS Control+v && $KEYTYPE '</a>'

FLAT SYMBOL: $KEYTYPE '&#9837;'
H T BOLD: $KEYPRESS Control+c && $KEYTYPE '<strong>'"$(xclip -o)"'</strong>'
H T book title: $KEYPRESS Control+c && $KEYTYPE '<cite>'"$(xclip -o)"'</cite>'
H T code: $KEYPRESS Control+c && $KEYTYPE '<code>' && $KEYPRESS Control+v && $KEYTYPE '</code>'
H T COMMANDO: $KEYPRESS Control+c && $KEYTYPE '<!-- ' && $KEYPRESS Control+v && $KEYTYPE ' -->'
H T COMMENT: $KEYPRESS Control+c && $KEYTYPE '<!-- ' && $KEYPRESS Control+v && $KEYTYPE ' -->'
H T HEADER ONE: $KEYPRESS Control+c && $KEYTYPE '<h1>'"$(xclip -o)"'</h1>'
H T HEADER THREE: $KEYPRESS Control+c && $KEYTYPE '<h3>'"$(xclip -o)"'</h3>'
H T HEADER TWO: $KEYPRESS Control+c && $KEYTYPE '<h2>'"$(xclip -o)"'</h2>'
H T ITALICS: $KEYPRESS Control+c && $KEYTYPE '<em>'"$(xclip -o)"'</em>'
H T page template: xvkbd -xsendevent -secure -file $CONFIGDIR/data/html_template.txt
H T preformatted: $KEYPRESS Control+c && $KEYTYPE '<pre>' && $KEYPRESS Control+v && $KEYTYPE '</pre>'
I D EQUALS THIS: $KEYTYPE ' id=""' && $KEYPRESS Left Control+v Right
IMAGE C S S: xvkbd -xsendevent -secure -file $CONFIGDIR/data/img_css.txt
IMAGE D I V: xvkbd -xsendevent -secure -file $CONFIGDIR/data/image_div.txt
INSERT AUDIO: xvkbd -xsendevent -secure -file $CONFIGDIR/data/audio.txt
INSERT IMAGE: $KEYTYPE '<img width="auto" src="\Cv' && $KEYTYPE '">'
INSERT PANEL:  xvkbd -xsendevent -secure -file $CONFIGDIR/data/panel.txt
INSERT PHONE ICON: $KEYPRESS Control+c && sleep .2 && dotnum=$(xclip -o | sed -e 's/(//'| sed -e 's/ //g' | sed -e 's/[)-]/\./g') && rawnum=$(xclip -o | sed -e 's/[() -]//g') && $KEYTYPE "\Cv"'&nbsp; <a class="" href="tel:' && $KEYTYPE "$rawnum" && $KEYTYPE '" title="' && $KEYTYPE "\Cv" && $KEYTYPE '"><i class="fa fa-phone"></i></a>'
INSERT PRINT BUTTON:  xvkbd -xsendevent -secure -file $CONFIGDIR/data/print_button.txt
INSERT video: xvkbd -xsendevent -secure -file $CONFIGDIR/data/video.txt
JAVASCRIPT DATE CODE: xvkbd -xsendevent -secure -file $CONFIGDIR/data/js_date.txt
LABELS HEADER: xvkbd -xsendevent -secure -file $CONFIGDIR/data/labels.txt
# link to a score in listening lists
LINK TO SCORE: $KEYTYPE '<span class="small score_button"><a class="score_button" href="scores/' && $KEYPRESS Control+v && $KEYTYPE '">score</a></span>'
LIST ITEM TAGS: $KEYPRESS Control+c && $KEYTYPE "<li>" && $KEYPRESS Control+v && $KEYTYPE "</li>"
MAKE SUPERSCRIPT: $KEYPRESS Control+c && $KEYTYPE '<sup>'"$(xclip -o)"'</sup>'
MAKE SUPER: $KEYPRESS Control+c && $KEYTYPE '<sup>'"$(xclip -o)"'</sup>'
MARKDOWN CODE: $KEYPRESS Control+c && $KEYTYPE '`'"$(xclip -o)"'`'
MARKDOWN BOLD: $KEYPRESS Control+c && $KEYTYPE '**'"$(xclip -o)"'**'
MARKDOWN HEADER: xvkbd -xsendevent -secure -file $CONFIGDIR/data/mkd_header.txt
MARKDOWN HYPERLINK: $KEYPRESS Control+c && sleep .2 && $KEYPRESS BackSpace && sleep .2 && link_text=$(strings $CLIP | sed -n '1p') && sleep .2 && link_url=$(strings $CLIP | sed -n '2p') && $KEYTYPE "[$link_text]($link_url)"
MARKDOWN ITALICS: $KEYPRESS Control+c && $KEYTYPE '*'"$(xclip -o)"'*'
MARKDOWN PREVIEW: $KEYTYPE "\Ca\Cc" && $CONFIGDIR/scripts/mdpreview.sh
NATURAL SYMBOL: $KEYTYPE '&#9838;'
NEW BULLET POINT: $KEYTYPE "\r\* "
NEW LIST ITEM: $KEYTYPE "\r1. "
new table row: $KEYTYPE '<tr></tr>' && $KEYPRESS Left Left Left Left Left
NO DECORATION: $KEYTYPE ' style="text-decoration: none"'
OPEN CENTER TAG: $KEYTYPE '<center>'
OPEN D I V TAG: $KEYTYPE '<div>'
OPEN H REF: $KEYTYPE '<a href="">' && $KEYPRESS Left Left
open p tag: $KEYTYPE '<p>'
PARAGRAPH TAGS: $KEYPRESS Control+c && $KEYTYPE "<p>" && $KEYPRESS Control+v && $KEYTYPE "</p>"
PARAGRAPH TAGS: $KEYPRESS Control+c && $KEYTYPE '<p>' && $KEYPRESS Control+v && $KEYTYPE '</p>'
PHOTO BY DANNY: $KEYTYPE 'title="photo by Danny Izzo http://nouveauphoteau.net"'
QUARTER NOTE: $KEYTYPE '&#9833;'
SCHOOL OF MUSIC C S S: $KEYTYPE '<link type="text/css" rel="stylesheet" href="../som.css"/>'
SHARP SYMBOL: $KEYTYPE '&#9839;'
SHORTEN YOU ARE EL: $KEYPRESS Control+l && sleep .2 && $KEYPRESS Control+c && sleep .2 && long_url=$(xclip -o) && sleep .2 && curl -s http://is.gd/api.php?longurl=`perl -MURI::Escape -e "print uri_escape('$long_url');"` | xclip -i && $KEYTYPE "$(xclip -o)"
SPANDEX: $KEYPRESS Control+c && $KEYTYPE '<span>'"$(xclip -o)"'</span
SPAN THIS: $KEYPRESS Control+c && $KEYTYPE '<span>'"$(xclip -o)"'</span>'
specialty CLASS: $KEYTYPE ' class="specialty"'
SPECIALTY SPAN: $KEYPRESS Control+c && $KEYTYPE '<span class="specialty">'"$(xclip -o)"'</span>'
table data tags: $KEYTYPE '<td></td>' && $KEYPRESS Left Left Left Left Left
table header tags: $KEYTYPE '<th></th>' && $KEYPRESS Left Left Left Left Left
TABLE TAGS: $KEYTYPE "<table>\r</table>"
TARGET EQUALS BLANK: $KEYTYPE ' target="_blank"'
text align center: $KEYTYPE 'text-align: center;'
text align left: $KEYTYPE 'text-align: left;'
TITLE EQUALS THIS: $KEYTYPE ' title=""' && $KEYPRESS Left Control+v Right
UNORDERED LIST TAGS: $KEYPRESS Control+c && $KEYTYPE "<ul>\r" && $KEYPRESS Control+v && $KEYTYPE "\r</ul>"
U T F EIGHT HEADER: xvkbd -xsendevent -secure -file $CONFIGDIR/data/utf8.txt
VERBATIM HYPERLINK: $KEYPRESS Control+c && $KEYTYPE '<a href="' && $KEYPRESS Control+v && $KEYTYPE '">' && $KEYPRESS Control+v && $KEYTYPE '</a>'

# ----- INSERT HYPERLINK instructions ------ #
# 1. do "save link" command
# 2. select link text in document
# 3. say "insert hyperlink"
# ------------------------------------------ #

SAVE LINK: $KEYPRESS Control+c && xclip -o > /tmp/url.txt && echo "got it" | $VOICE
INSERT HYPERLINK: $KEYPRESS Control+c && $KEYTYPE '<a href="' && $KEYTYPE "$(cat /tmp/url.txt)" && $KEYTYPE '">' && $KEYPRESS Control+v && $KEYTYPE '</a>' && rm /tmp/url.txt
INSERT EYE FRAME: $KEYTYPE '<iframe width="auto" height="65" scrolling="no" frameborder="no" src=""></iframe>' && $KEYPRESS Control+Left Left Left Left Left

INSERT POPUP: xvkbd -xsendevent -secure -file $CONFIGDIR/data/popup.txt
POPUP JAVASCRIPT HEADER: xvkbd -xsendevent -secure -file $CONFIGDIR/data/popup_js_code.txt


#===============================
#   ___________
#  < Fun Stuff >
#   -----------
#    \     .    _  .
#     \    |\_|/__/|
#         / / \/ \  \
#        /__|O||O|__ \
#       |/_ \_/\_/ _\ |
#       | | (____) | ||
#       \/\___/\__/  //
#       (_/         ||
#        |          ||
#        |          ||\
#         \        //_/
#          \______//
#         __ || __||
#        (____(____)
#
#===============================

ARE YOU LISTENING: choice=$(shuf -e nope yup why | shuf -n1) ; echo "$choice" | $VOICE
RASP BERRY: choice=$(shuf -e yes? whatsup? yeah? | shuf -n1) ; echo "$choice" | $VOICE
HELLO: echo "$(shuf -n1 $CONFIGDIR/data/greetings.txt)" | $VOICE
HELLO HAL: echo "$(shuf -n1 $CONFIGDIR/data/greetings.txt)" | $VOICE
HELLO COMPUTER: echo "$(shuf -n1 $CONFIGDIR/data/greetings.txt)" | $VOICE
HELLO TEE 61: echo "$(shuf -n1 $CONFIGDIR/data/greetings.txt)" | $VOICE
GOOD MORNING: echo "$(shuf -n1 $CONFIGDIR/data/greetings.txt)" | $VOICE
HOOS THE FLUFFIEST: echo "dingle is, of course" | $VOICE
HOOS THE MAN: echo "you are, $(whoami)" | $VOICE
WHO AM I: echo "you are, $(whoami)" | $VOICE
COMPUTER: echo "$(shuf -n1 $CONFIGDIR/data/greetings.txt)" | $VOICE

HOW IS THE WEATHER: $CONFIGDIR/plugins/weather.sh &
TELL ME THE WEATHER: $CONFIGDIR/scripts/weather.sh &
IS IT RAINING: $CONFIGDIR/scripts/weather.sh &

IS THAT RIGHT: choice=$(shuf -e yes no "absolutely not" "I don't know" "what do you think" maybe "let me think about it" |shuf -n1) ; echo "$choice" | $VOICE
IS THAT TRUE: echo "$(shuf -n1 $CONFIGDIR/data/true.txt)" | $VOICE
EIGHT BALL: echo "$(shuf -n1 $CONFIGDIR/data/true.txt)" | $VOICE

REPEAT AFTER ME: sleep 7 ; $KEYTYPE "\Ca\Cc" ; xclip -o | sed -e 's/repeat after me//' | $VOICE
SPEAK THIS: $KEYPRESS Control+c && xclip -o | $VOICE

SHUT UP: pkill espeak
STOP SPEAKING: pkill espeak

TESTING: echo "testicle 1 2, testicle 1 2, all seems fine, sir!" | $VOICE &
TESTING EE SPEAK: espeak "testing 1 2 3 1 2 3"
THANK YOU: shuf -n1 $CONFIGDIR/data/thanks.txt | $VOICE
THATS PRETTY RUDE: echo "$(shuf -n1 $CONFIGDIR/data/sorry.txt)" | $VOICE
WHADDAYA THINK: echo "$(shuf -n1 $CONFIGDIR/data/opinions.txt)" | $VOICE
WHAT CAN WE DO IM BORED: echo "how about $(shuf -n1 $CONFIGDIR/data/bored.txt)" | $VOICE
WHAT DAY IS IT: date "+%A" | $VOICE
WHAT DO YOU THINK: echo "$(shuf -n1 $CONFIGDIR/data/opinions.txt)" | $VOICE
WHATS TODAYS DATE: date "+%A, %B %e %Y" | $VOICE && notify-send Date "`date`"


# --------------------- Time -------------------------- #CONFIG
#
# For a straight answer to your time question use this:
#
#    WHAT TIME IS IT: date "+%l:%M %p" | $VOICE
#
# that's not much fun though so I have a script that
# does a virtual coin flip, and depending on whether
# it brings back a 0 or a 1 will you give you either
# the correct time or a randomly-chosen smart-alec answer
# from a list of answers that I have put together.
#
# ----------------------------------------------------- #
WHO ARE YOU: echo "I am T61 of unimatrix zero, Our purose is to serve the collective, we are borg, resistance is futile." | $VOICE
STATE YOUR DESIGNATION: echo "I am RPI3B of younamatrix zero, Our purose is to serve the collective, we are borg, you're biological and technological advantages will be adapted to our own! Resistance is futile!" | $VOICE
WHAT TIME IS IT: date "+%l:%M %p" | $VOICE
# WHAT TIME IS IT: $CONFIGDIR/scripts/whattime.sh
YOU JUST SAID THAT: echo "$(shuf -n1 $CONFIGDIR/data/justsaid.txt)" | $VOICE
YOU SAID THAT: echo "$(shuf -n1 $CONFIGDIR/data/justsaid.txt)" | $VOICE
THATS RUDE: echo "$(shuf -n1 $CONFIGDIR/data/sorry.txt)" | $VOICE

# VOICE YOUR: FUNNY "$(echo -shuf $n1/CONFIGDIR/funny.txt)" | $VOICE
YOUR SO FUNNY: echo "$(shuf -n1 $CONFIGDIR/data/funny.txt)" | $VOICE
CORPORATE BULLSHIT: curl -s http://cbsg.sourceforge.net/cgi-bin/live | grep -Eo '^<li>.*</li>' | sed s,\</\\?li\>,,g | shuf -n 1 | $VOICE &
PERFECT: echo "nothing is perfect." | $VOICE

# =================================================================== #
#                           ..
#   `$$'      `$$'          $$    `$$'
#    $$        $$       <$$$$$$$$> $$
#    $$        $$           $$'    $$
#    $$,d$$$b. $$' g$$$$$b. $$     $$,d%%%   ,d$$$b. `$$ ,d$%,.
#    $$$'  `$$ $$  "'   `$$ $$     $$'  `$$ ,$P' `Y$. $$,P''''`
#    $$'    $$ $$  ,ggggg$$ $$     $$    $$ $$'   `$$ $$'
#    $$     $$ $$ ,$P"   $$ $$     $$    $$ $$ggggg$$ $$
#    $$    ,$P $$ $$'   ,$$ $$     $$    $$ $$.       $$
#    $$ _,g$P' $$ `$b. ,$$$ $$     $$    $$ `$$._ _., $$
#   ,$$$$P"'  ,$$. `Y$$P'$$.`Y$L  ,$$.  ,$$. `Y$$$$P' $$
#
# =================================================================== #

# ----------- Unison -------------#

SYNC BLADDER: unison blather -auto & echo "opening unison and automatically accept default (nonconflicting) actions." | $VOICE
SYNC BLADDER FOLDER: unison blather -auto & echo "opening unison and automatically accept default (nonconflicting) actions." | $VOICE
OPEN UNISON: unison & echo "opening unison." | $VOICE
GO TO UNISON: wmctrl -a Unison
QUIT UNISON: wmctrl -c Unison

# ----------- Msfconsole ------------ #
# M S F CONSOLE: sudo msfconsole &

# ----------- Armitage -------------#

# OPEN ARMITAGE: gksu armitage & echo "opening armitage." | $VOICE
# GO TO ARMITAGE: wmctrl -a armitage
QUIT ARMITAGE: wmctrl -c armitage

# ----------- Nmap ------------ #

N MAP: ifconfig -a | grep -Po '\b(?!255)(?:\d{1,3}\.){3}(?!255)\d{1,3}\b' | xargs nmap -A -p0- &
NET MAP: ifconfig -a | grep -Po '\b(?!255)(?:\d{1,3}\.){3}(?!255)\d{1,3}\b' | xargs nmap -A -p0- &

# ----------- Top ten commands ------------ #
TOP TEN COMMANDS: $PLUGINS/top_ten_commands.sh &

# ----------- Sing ------------ #
SING GLADOS: $PLUGINS/GLaDoS.sh &
SING GLADIS: $PLUGINS/GLaDoS.sh &
STOP SINGING: pkill mplayer
#STOP SINGING: kill $(ps aux | grep 'GLaDoS.sh' | awk '{print $2}')

# ----------- status report ------------ #
STATUS REPORT: $PLUGINS/status.sh &

# ----------- Bash scripting ------------ #
SHE BANG: $KEYTYPE '#!' &
BIN BASH: $KEYTYPE '/bin/bash' &
CD MIN: $KEYTYPE 'cd -' && $KEYPRESS Return &

L S: $KEYTYPE 'ls ' && $KEYPRESS Return &
S L: $KEYTYPE 'sl ' && $KEYPRESS Return &
S L L: $KEYTYPE 'sl -l ' && $KEYPRESS Return &

STAR WARS: telnet towel.blinkenlights.nl &

# COW SAY: $KEYPRESS Control_L+Shift+c & xclip -o | cowsay &
# COW THINK: $KEYPRESS Control_L+Shift+c & xclip -o | cowsay &
COW SAY FORTUNE: fortune | cowsay & echo "moo" | $VOICE &
COW THINK FORTUNE: fortune | cowsay
# X COW SAY: $KEYPRESS Control_L+c & xclip -o | xcowsay &
# X COW THINK: $KEYPRESS Control_L+c & xclip -o | xcowsay --think &
# X COW FORTUNE: xcowfortune &
# X COW THINK FORTUNE: xcowfortune --think &

# WHO IS: $KEYPRESS Control_L+c $ xclip -o | whois &
# X WHO IS: $PLUGINS/whois-zenety.sh &

# ----------- reboot/shutdown ------------ #

REBOOT: $PLUGINS/reboot.sh &
REBOOT NOW: sudo reboot now &
SHUTDOWN: $PLUGINS/shutdown.sh &
SHUTDOWN NOW: sudo shutdown now &

# ----------- Lolcat ------------ #
# BASH LOLCAT: $KEYTYPE "bash | lolcat" $KEYPRESS Return &

# ----------- Bleachbit ------------ a bit wanky still! #
# CLEAN COMPUTER: gnome-terminal -x "bleachbit --list | grep -E "[a-z]+\.[a-z]+" | xargs bleachbit --clean" &
# LIST CLEAN COMPUTER: gnome-terminal -e "bleachbit --list | grep -E '[a-z]+\.[a-z]+' | xargs bleachbit --preview && echo 'Press [ENTER] to exit' && read enterkey" &
# SUDO CLEAN COMPUTER: gnome-terminal -e "sudo bleachbit --list | grep -E "[a-z]+\.[a-z]+" | xargs bleachbit --clean" &

# ----------- cmatrix ------------ #
SEE MATRIX: cmatrix &

# ----------- oneko ------------ #
# ONEKO DOG: oneko -dog &
# ONEKO CAT: oneko &
# ONEKO SAKURA: oneko -sakura &
# ONEKO TORA: oneko -tora &
# QUIT ONEKO: pkill oneko &
# KILL ONEKO: pkill oneko &

# ----------- aafire ------------ #
# AA FIRE: aafire &

# ----------- bb ------------ #
# BE BE: bb &
# KILL BE BE: pkill bb &
# QUIT BE BE: pkill bb &

# ----------- asciiquarium ------------ #
# ASCI AQUARIUM: asciiquarium &

# ----------- 4Chan ------------ #
GO TO FOUR CHAN: $BROWSER boards.4chan.org

# ----------- Emulation ------------ #
# ----------- RetroArch ------------ #

OPEN RETRO ARCH: retroarch & echo "opening RetroArch Emulation Interface, Enjoy!" | $VOICE
GO TO RETRO ARCH: wmctrl -a RetroArch
QUIT RETRO ARCH: wmctrl -c RetroArch
## MORE TO ADD LATER, like:
## save game, load game, speedup, speeddown, (switch) fullscreen etc

# ----------- PPSSPP ------------ #

OPEN PEE ES PEE EMULATOR: ppsspp-sdl & echo "opening PSP Emulator, Enjoy!" | $VOICE
GO TO PEE ES PEE EMULATOR: wmctrl -a PPSSPP
QUIT PEE ES PEE EMULATOR: wmctrl -c PPSSPP
## MORE TO ADD LATER, like:
## save game, load game, speedup, speeddown, (switch) fullscreen etc

# ----------- Pokemon Revolution Online -------------#

# OPEN POKE MON: ~/PRO-linux/./PROLinux95_42.x86_64 & echo "opening pokemon revolution online." | $VOICE
# GO TO POKE MON: wmctrl -a Pokemon
# QUIT POKE MON: wmctrl -c Pokemon

# ----------- Emulation Station -------------#
OPEN EMULATION STATION: emulationstation & echo "opening emulation station, Enjoy!" | $VOICE
QUIT EMULATION STATION: killall emulationstation & echo "quitting emulationstation now" | $VOICE
BACK GROUND MUSIC ON: rm /home/pi/PyScript/DisableMusic & echo "Background music Enabled." | $VOICE
BACK GROUND MUSIC OFF: touch /home/pi/PyScript/DisableMusic & echo "Background music Disabled." | $VOICE

PLAY MUSIC: rm /home/pi/PyScript/DisableMusic & echo "Background music Enabled." | $VOICE
STOP MUSIC: touch /home/pi/PyScript/DisableMusic & echo "Background music Disabled." | $VOICE
SKIP SONG: touch /home/pi/PyScript/DisableMusic & rm /home/pi/PyScript/DisableMusic & echo "Background music skipped." | $VOICE

ENABLE BACK GROUND MUSIC: rm /home/pi/PyScript/DisableMusic & echo "Background music Enabled." | $VOICE
DISABLE BACK GROUND MUSIC: touch /home/pi/PyScript/DisableMusic & echo "Background music Disabled." | $VOICE
START RASPBIAN: ./home/pi/RetroPie/retropiemenu/raspbian.sh & echo "Starting raspbian." | $VOICE

# ----------- Kismet -------------#
START KISS METH TP LINK: kismet -c wlan1 & echo "starting kismet on tplink" |  $VOICE
START KISS METH: kismet -c wlan0 & echo "starting kismet" |  $VOICE
STOP KISS MET: killall kismet echo "stopping kismet" |  $VOICE

# ----------- Desktop ------------ #
START X: startx & echo "starting X desktop" |  $VOICE
START X DESKTOP: startx & echo "starting X desktop" |  $VOICE
START DESKTOP: startx & echo "starting X desktop" |  $VOICE
#Desktop shortcuts
#  <keybind key="C-A-Left">
#    <action name="GoToDesktop"><to>left</to><wrap>no</wrap></action>
#--
#  <keybind key="C-A-Right">
#    <action name="GoToDesktop"><to>right</to><wrap>no</wrap></action>
#--
#  <keybind key="C-A-Up">
#    <action name="GoToDesktop"><to>up</to><wrap>no</wrap></action>
#--
#  <keybind key="C-A-Down">
#    <action name="GoToDesktop"><to>down</to><wrap>no</wrap></action>
#--
#  <keybind key="S-A-Left">
#    <action name="SendToDesktop"><to>left</to><wrap>no</wrap></action>
#--
#  <keybind key="S-A-Right">
#    <action name="SendToDesktop"><to>right</to><wrap>no</wrap></action>
#--
#  <keybind key="S-A-Up">
#    <action name="SendToDesktop"><to>up</to><wrap>no</wrap></action>
#--
#  <keybind key="S-A-Down">
#    <action name="SendToDesktop"><to>down</to><wrap>no</wrap></action>
#--
#  <keybind key="W-F1">
#    <action name="GoToDesktop"><to>1</to></action>
#--
#  <keybind key="W-F2">
#    <action name="GoToDesktop"><to>2</to></action>
#--
#  <keybind key="W-F3">
#    <action name="GoToDesktop"><to>3</to></action>
#--
#  <keybind key="W-F4">
#    <action name="GoToDesktop"><to>4</to></action>
#--
#  <keybind key="W-d">
#    <action name="ToggleShowDesktop"/>
#--
#  <keybind key="A-F4">
#    <action name="Close"/>
#--
#  <keybind key="A-Escape">
#    <action name="Lower"/>
#--
#  <keybind key="A-space">
#    <action name="ShowMenu"><menu>client-menu</menu></action>
#--
# <keybind key="A-Print">
#    <action name="Execute"><command>scrot -s</command></action>
#--
#  <keybind key="A-Tab">
#    <action name="NextWindow">
#--
#  <keybind key="A-S-Tab">
#    <action name="PreviousWindow">
#--
#  <keybind key="C-A-Tab">
#    <action name="NextWindow">
#--
#  <keybind key="W-S-Right">
#    <action name="DirectionalCycleWindows">
#--
#  <keybind key="W-S-Left">
#    <action name="DirectionalCycleWindows">
#--
#  <keybind key="W-S-Up">
#    <action name="DirectionalCycleWindows">
#--
#  <keybind key="W-S-Down">
#    <action name="DirectionalCycleWindows">
#--
#  <keybind key="W-e">
#    <action name="Execute">
#--
#  <keybind key="Print">
#    <action name="Execute"><command>scrot</command></action>

# ----------- Kodi ------------ #
START KODI: kodi & echo "starting kodi media centre" |  $VOICE
QUIT KODI: sudo killall kodi_v7.bin & echo "stopping kodi media centre" |  $VOICE
#kodi keyboard shortcuts:
